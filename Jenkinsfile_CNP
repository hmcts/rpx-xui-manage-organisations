#!groovy

properties([
    [
        $class       : 'GithubProjectProperty',
        displayName  : 'Expert UI Manage Organisations',
        projectUrlStr: 'https://github.com/hmcts/rpx-xui-manage-organisations'
    ],
    pipelineTriggers([
    cron('H 07 * * 1-5')
    ])
])

@Library("Infrastructure")

def type      = "nodejs"
def product   = "xui"
def component = "mo-webapp"
def channel   = '#xui-pipeline'

def secrets = [
  'rpx-${env}': [
    secret('test-user1-email', 'TEST_USER1_EMAIL'),
    secret('test-user1-password', 'TEST_USER1_PASSWORD'),
    secret('test-user2-email', 'TEST_USER2_EMAIL'),
    secret('test-user2-password', 'TEST_USER2_PASSWORD'),
    secret('test-townley-email', 'TEST_TOWNLEY_EMAIL'),
    secret('test-townley-password', 'TEST_TOWNLEY_PASSWORD'),
    secret('test-api-email', 'TEST_API_EMAIL'),
    secret('test-api-password', 'TEST_API_PASSWORD'),
    secret('mo-s2s-client-secret', 'S2S_SECRET'),
    secret('xui-oauth2-token', 'IDAM_SECRET'),
    secret('appinsights-instrumentationkey-mo', 'APPINSIGHTS_INSTRUMENTATIONKEY'),
    secret('google-analytics-key', 'GOOGLE_ANALYTICS_KEY'),
    secret('launch-darkly-client-id', 'LAUNCH_DARKLY_CLIENT_ID'),
    secret('system-user-name', 'SYSTEM_USER_NAME'),
    secret('system-user-password', 'SYSTEM_USER_PASSWORD'),
    secret('mo-webapp-redis6-connection-string', 'REDISCLOUD_URL')
  ],
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [ $class: 'AzureKeyVaultSecret',
    secretType: 'Secret',
    name: secretName,
    version: '',
    envVariable: envVar
  ]
}

withNightlyPipeline(type, product, component) {
    enableSlackNotifications(channel)
    loadVaultSecrets(secrets)
    // enableFortifyScan('rpx-aat')
    enableFullFunctionalTest(120)
    // enableSecurityScan()
    // enableCrossBrowserTest()

    env.TEST_URL = 'https://manage-org.aat.platform.hmcts.net/'
    afterSuccess('checkout') {sh 'yarn cache clean'}
    afterSuccess('build') {
        sh 'npm run build'
        publishHTML([
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "test/reports/lint/node/",
            reportFiles          : 'index.html',
            reportName           : 'node lint Report'
        ])
        publishHTML([
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "test/reports/lint/ng/",
            reportFiles          : 'index.html',
            reportName           : 'ng lint Report'
        ])
    }


    afterSuccess('crossBrowserTest') {
        publishHTML([
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "reports/tests/crossbrowser/",
            reportFiles          : 'index.html',
            reportName           : 'XUI Manage Organisation Cross Browser Tests'
        ])
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'build/reports/tests/crossbrowser/**/*'
    }
     afterSuccess('fullFunctionalTest') {

        publishHTML([
          allowMissing         : true,
          alwaysLinkToLastBuild: true,
          keepAll              : true,
          reportDir            : "reports/tests/api_functional/",
          reportFiles          : 'mochawesome.html',
          reportName           : 'API Functional Test'
        ])

          publishHTML([
              allowMissing         : true,
              alwaysLinkToLastBuild: true,
              keepAll              : true,
              reportDir            : "reports/tests/functional/",
              reportFiles          : 'index.html',
              reportName           : 'XUI Manage Organisation Full functional Tests'
          ])

      }
}
