{"version":3,"file":"/home/alan/Cloud/workspaces/prd-pui-manager/api/lib/errorStack.ts","sources":["/home/alan/Cloud/workspaces/prd-pui-manager/api/lib/errorStack.ts"],"names":[],"mappings":";;AAEA,IAAK,OAAO,GAAG,IAAI,CAAA;AAEnB,oBAA2B,GAAoB,EAAG,GAAqB,EAAG,IAAI;IAC1E,OAAO,GAAG,GAAG,CAAA;IACb,OAAO,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE,CAAA;IAC/B,IAAI,EAAE,CAAA;AAEV,CAAC;AALD,gCAKC;AACD,+EAA+E;AAC/E,cAAqB,IAAS;IAC1B,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;AACzC,CAAC;AAFD,oBAEC;AAED;IACI,OAAO,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,EAAE,CAAA;AAC3C,CAAC;AAFD,kBAEC;AAED;IACI,IAAM,QAAQ,GAAG,EAAE,CAAA;IACnB,IAAI,KAAK,GAAG,CAAC,CAAA;IAEb,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,UAAA,KAAK;QAC1C,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACtB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAA;SAChC;aAAM;YACH,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,CAAA;YACvB,KAAK,EAAE,CAAA;SACV;IACL,CAAC,CAAC,CAAA;IAEF,OAAO,QAAQ,CAAA;AACnB,CAAC;AAdD,kBAcC","sourcesContent":["import * as express from 'express'\n\nlet  request = null\n\nexport function errorStack(req: express.Request , res: express.Response , next){\n    request = req\n    request.session.errorStack = []\n    next()\n\n}\n// if the data is ana rray the first entry will be a key when returned by get()\nexport function push(data: any): void {\n    request.session.errorStack.push(data)\n}\n\nexport function pop(): any {\n    return request.session.errorStack.pop()\n}\n\nexport function get() {\n    const outArray = {}\n    let count = 0\n\n    request.session.errorStack.reverse().map(error => {\n        if (Array.isArray(error)) {\n            outArray[error[0]] = error[1]\n        } else {\n            outArray[count] = error\n            count++\n        }\n    })\n\n    return outArray\n}\n"]}