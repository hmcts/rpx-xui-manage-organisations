nodejs:
  image: ${IMAGE_NAME}
  ingressHost: ${SERVICE_FQDN}
  
redis:
  enabled: false
idam-pr:
  enabled: true
  redirect_uris:
    XUIMO:
      - https://${SERVICE_FQDN}/oauth2/callback



ccd:
  ccd:
    definitionImporter:
      enabled: false
    apiGatewayWeb:
      enabled: true
    postgresql:
      enabled: false
    s2s:
      enabled: false
    elastic:
      enabled: true

  global:
    postgresHostname: "xui-preview.postgres.database.azure.com"
    postgresSecret: postgres
    databaseNamePrefix: "pr-${CHANGE_ID}-"
    idamApiUrl: https://idam-api.aat.platform.hmcts.net
    idamWebUrl: https://idam-web-public.aat.platform.hmcts.net
    dmStoreUrl: http://dm-store-aat.service.core-compute-aat.internal
    ccdAdminWebIngress: admin-web-${SERVICE_FQDN}
    ccdApiGatewayIngress: gateway-${SERVICE_FQDN}
    ccdDataStoreUrl: http://${SERVICE_NAME}-ccd-data-store-api
    ccdDefinitionStoreUrl: http://${SERVICE_NAME}-ccd-definition-store
    ccdUserProfileUrl: http://${SERVICE_NAME}-ccd-user-profile-api
    postgresUsername: ${CCD_GLOBAL_POSTGRES_USERNAME_PREVIEW}
    s2sUrl: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal

  ingressHost: ${SERVICE_FQDN}
  ingressIP: ${INGRESS_IP}
  consulIP: ${CONSUL_LB_IP}

  ccd-api-gateway-web:
    nodejs:
      disableKeyVaults: true
      imagePullPolicy: Always
      environment:
        ADDRESS_LOOKUP_TOKEN: ${ADDRESS_LOOKUP_TOKEN}
        IDAM_SERVICE_KEY: ${CCD_API_GATEWAY_S2S_KEY}
        IDAM_OAUTH2_CLIENT_SECRET: ${CCD_API_GATEWAY_OAUTH2_CLIENT_SECRET}
      ingressHost: gateway-${SERVICE_FQDN}
      ingressIP: ${INGRESS_IP}

  ccd-data-store-api:
    java:
      imagePullPolicy: Always
      image: hmctspublic.azurecr.io/ccd/data-store-api:pr-2578
      environment:
        CASE_DOCUMENT_AM_API_ATTACH_DOCUMENT_ENABLED: true
        DATA_STORE_DB_HOST: '{{ tpl .Values.global.postgresHostname $}}'
        DATA_STORE_DB_USERNAME: hmcts
        DATA_STORE_DB_NAME: "pr-${CHANGE_ID}-data-store"
        DATA_STORE_IDAM_KEY: ${DATA_STORE_S2S_KEY}
        DATA_STORE_DEFAULT_LOG_LEVEL: info
        LOG_CALLBACK_DETAILS: "*"
        DATA_STORE_S2S_AUTHORISED_SERVICES: ccd_gw,ccd_gateway,ccd_data,aac_manage_case_assignment,xui_webapp,ccd_case_document_am_api,sptribs_frontend,sptribs_case_api,sptribs_dss_update_case_web,em_ccd_orchestrator,wa_task_management_api,wa_task_monitor,wa_case_event_handler,wa_workflow_api
        CCD_S2S_AUTHORISED_SERVICES_CASE_USER_ROLES: aac_manage_case_assignment,fpl_case_service,finrem_case_orchestration,iac,sptribs_frontend,civil_service,sptribs_case_api
        ELASTIC_SEARCH_HOSTS: ${SERVICE_NAME}-es-master:9200
        ELASTIC_SEARCH_DATA_NODES_HOSTS: http://${SERVICE_NAME}-es-master:9200
        CASE_DOCUMENT_AM_URL: http://${SERVICE_NAME}-ccd-case-document-am-api
        IDAM_OAUTH2_DATA_STORE_CLIENT_SECRET: ${IDAM_OAUTH2_DATA_STORE_CLIENT_SECRET}
        IDAM_DATA_STORE_SYSTEM_USER_USERNAME: ${IDAM_DATA_STORE_SYSTEM_USER_USERNAME}
        IDAM_DATA_STORE_SYSTEM_USER_PASSWORD: ${IDAM_DATA_STORE_SYSTEM_USER_PASSWORD}
        ROLE_ASSIGNMENT_URL: https://am-role-assignment-service-${SERVICE_FQDN}
        USER_PROFILE_HOST: https://ccd-user-profile-api-xui-mo-webapp-pr-1367.preview.platform.hmcts.net
      secrets:
        DATA_STORE_DB_PASSWORD:
          secretRef: postgres
          key: PASSWORD
          disabled: false
      keyVaults:
        ccd:
          secrets:
            - name: data-store-api-draft-key
              alias: CCD_DRAFT_ENCRYPTION_KEY
            - name: ccd-data-s2s-secret
              alias: DATA_STORE_IDAM_KEY
            - name: ccd-ELASTIC-SEARCH-URL
              alias: ELASTIC_SEARCH_HOSTS
            - name: ccd-ELASTIC-SEARCH-DATA-NODES-URL
              alias: ELASTIC_SEARCH_DATA_NODES_HOSTS
            - name: ccd-ELASTIC-SEARCH-PASSWORD
              alias: ELASTIC_SEARCH_PASSWORD
            - name: app-insights-connection-string
              alias: app-insights-connection-string
            - name: idam-data-store-client-secret
              alias: IDAM_OAUTH2_DATA_STORE_CLIENT_SECRET
            - name: idam-data-store-system-user-username
              alias: IDAM_DATA_STORE_SYSTEM_USER_USERNAME
            - name: idam-data-store-system-user-password
              alias: IDAM_DATA_STORE_SYSTEM_USER_PASSWORD
      ingressHost: ccd-data-store-api-${SERVICE_FQDN}
      autoscaling:
        enabled: false

  am-role-assignment-service:
    enabled: true
    java:
      image: hmctspublic.azurecr.io/am/role-assignment-service:latest
      ingressHost: am-role-assignment-service-${SERVICE_FQDN}
      releaseNameOverride: ${SERVICE_NAME}-am-role-assignment-service
      imagePullPolicy: Always
      disableKeyVaults: true
      environment:
        CCD_DATA_STORE_URL: http://{{ .Release.Name }}-ccd-data-store-api
        RUN_LD_ON_STARTUP: false
        ORM_ENV: pr
        ROLE_ASSIGNMENT_DB_HOST: '{{ tpl .Values.global.postgresHostname $}}'
        ROLE_ASSIGNMENT_DB_NAME: "pr-${CHANGE_ID}-role_assignment"
        ROLE_ASSIGNMENT_DB_OPTIONS: "?stringtype=unspecified&ssl=disable&gssEncMode=disable"
        BYPASS_ORG_DROOL_RULE: true
        APPLICATION_LOGGING_LEVEL: INFO
          
  ccd-definition-store-api:
    java:
      disableKeyVaults: true
      image: hmctspublic.azurecr.io/ccd/definition-store-api:pr-1529
      imagePullPolicy: Always
      environment:
        DEFINITION_STORE_DB_HOST: '{{ tpl .Values.global.postgresHostname $}}'
        DEFINITION_STORE_IDAM_KEY: ${DEFINITION_STORE_S2S_KEY}
        IDAM_USER_URL: https://idam-web-public.aat.platform.hmcts.net
        ELASTIC_SEARCH_ENABLED: true
        ELASTIC_SEARCH_HOST: ${SERVICE_NAME}-es-master
      ingressHost: ccd-definition-store-${SERVICE_FQDN}
      autoscaling:
        enabled: false
    postgresql:
      persistence:
        enabled: false

  ccd-user-profile-api:
    java:
      disableKeyVaults: true
      imagePullPolicy: Always
      environment:
        USER_PROFILE_DB_HOST: '{{ tpl .Values.global.postgresHostname $}}'
      ingressHost: ccd-user-profile-api-${SERVICE_FQDN}

  ccd-admin-web:
    nodejs:
      disableKeyVaults: true
      image: hmctspublic.azurecr.io/ccd/admin-web:latest
      ingressHost: admin-web-${SERVICE_FQDN}
      environment:
        USER_PROFILE_DB_HOST: '{{ tpl .Values.global.postgresHostname $}}'
        IDAM_ADMIN_WEB_SERVICE_KEY: ${ADMIN_S2S_KEY}
        IDAM_OAUTH2_AW_CLIENT_SECRET: ${ADMIN_WEB_IDAM_SECRET}

  elasticsearch:
    nameOverride: ${SERVICE_NAME}-es
    clusterName: "es"
    replicas: 1
    initResources:
      limits:
        cpu: "500m"
        memory: "512Mi"
      requests:
        cpu: "25m"
        memory: "512Mi"
    minimumMasterNodes: 1
    antiAffinity: "soft"
    esJavaOpts: "-Xmx512m -Xms512m"
    extraEnvs:
      - name: discovery.type
        value: single-node
      - name: cluster.initial_master_nodes
        value: ""
      - name: action.auto_create_index
        value: .security*,.watches,.triggered_watches,.watcher-history-*,.logstash_dead_letter,.ml*
    persistence:
      enabled: false
    ingress:
      enabled: false
      className: traefik

  logstash:
    image: "hmctspublic.azurecr.io/imported/logstash/logstash"
    imageTag: "7.16.1"
    imagePullPolicy: "IfNotPresent"
    logstashJavaOpts: "-Xmx1g -Xms512M"
    extraInitContainers: |
      - name: download-postgres-jdbc
        image: hmctspublic.azurecr.io/curl:7.70.0
        command: ['curl', '-L', 'https://jdbc.postgresql.org/download/postgresql-42.2.18.jar', '-o', '/logstash-lib/postgresql.jar']
        volumeMounts:
        - name: logstash-lib
          mountPath: /logstash-lib
    extraVolumes: |
      - name: logstash-lib
        emptyDir: {}
      - name: database-secret-volume
        secret:
          secretName: postgres
    extraVolumeMounts: |
      - name: logstash-lib
        mountPath: /usr/share/logstash/ccd
      - name: database-secret-volume
        mountPath: /etc/logstash/secrets
        readOnly: true
    logstashConfig:
      logstash.yml: |
        http.host: 0.0.0.0
        xpack.monitoring.enabled: false
        xpack.monitoring.elasticsearch.hosts: ["http://{{ .Release.Name }}-es-master:9200"]
        queue.type: persisted
        dead_letter_queue.enable: true
      pipelines.yml: |
        - pipeline.id: main
          path.config: "/usr/share/logstash/pipeline/{01_input,02_filter,03_output}.conf"
          queue.type: persisted
    logstashPipeline:
      01_input.conf: |
        input  {
          jdbc {
            jdbc_connection_string => "jdbc:postgresql://xui-preview.postgres.database.azure.com:5432/pr-${CHANGE_ID}-data-store?sslmode-require&stringtype=unspecified"
            jdbc_user => "hmcts"
            jdbc_password_filepath => "/etc/logstash/secrets/PASSWORD"
            jdbc_validate_connection => true
            jdbc_driver_library => "/usr/share/logstash/ccd/postgresql.jar"
            jdbc_driver_class => "org.postgresql.Driver"
            jdbc_default_timezone => "UTC"
            statement => "UPDATE case_data SET marked_by_logstash = true WHERE marked_by_logstash = false RETURNING id, created_date, last_modified, jurisdiction, case_type_id, state, last_state_modified_date, data::TEXT as json_data, data_classification::TEXT as json_data_classification, reference, security_classification, supplementary_data::TEXT as json_supplementary_data"
            clean_run => false
            schedule => "* * * * * *"
          }
        }
      02_filter.conf: |
        filter{
          json{
              source => "json_data"
              target => "data"
              remove_field => ["json_data"]
              }
              json{
                  source => "json_supplementary_data"
                  target => "supplementary_data"
                  remove_field => ["json_supplementary_data"]
              }
              json{
                  source => "json_data_classification"
                  target => "data_classification"
                  remove_field => ["json_data_classification"]
              }
              if [data][SearchCriteria] {
                  clone {
                      clones => ["SearchCriteria"]
                  }
              }
              if [type] == "SearchCriteria" {
                  if [data][SearchCriteria] {
                      mutate {
                        rename => {"[data][SearchCriteria]" => "[data_new][SearchCriteria]" }
                      }
                  }
                  if [data][caseManagementLocation] {
                      mutate {
                        rename => {"[data][caseManagementLocation]" => "[data_new][caseManagementLocation]" }
                      }
                  }
                  if [data][CaseAccessCategory] {
                    mutate {
                        rename => {"[data][CaseAccessCategory]" => "[data_new][CaseAccessCategory]" }
                    }
                  }
                  if [data][caseNameHmctsInternal] {
                      mutate {
                        rename => {"[data][caseNameHmctsInternal]" => "[data_new][caseNameHmctsInternal]" }
                      }
                  }
                  if [data][caseManagementCategory] {
                      mutate {
                        rename => {"[data][caseManagementCategory]" => "[data_new][caseManagementCategory]" }
                      }
                  }
                  if [supplementary_data][HMCTSServiceId] {
                      mutate {
                        rename => {"[supplementary_data][HMCTSServiceId]" => "[supplementary_data_new][HMCTSServiceId]" }
                      }
                  }
                  if [data_classification][SearchCriteria] {
                      mutate {
                        rename => {"[data_classification][SearchCriteria]" => "[data_classification_new][SearchCriteria]" }
                      }
                  }
                  if [data_classification][CaseAccessCategory] {
                    mutate {
                          rename => {"[data_classification][CaseAccessCategory]" => "[data_classification_new][CaseAccessCategory]" }
                    }
                  }
                  if [data_classification][caseManagementLocation] {
                    mutate {
                        rename => {"[data_classification][caseManagementLocation]" => "[data_classification_new][caseManagementLocation]" }
                    }
                  }
                  if [data_classification][caseNameHmctsInternal] {
                      mutate {
                        rename => {"[data_classification][caseNameHmctsInternal]" => "[data_classification_new][caseNameHmctsInternal]" }
                      }
                  }
                  if [data_classification][caseManagementCategory] {
                      mutate {
                        rename => {"[data_classification][caseManagementCategory]" => "[data_classification_new][caseManagementCategory]" }
                      }
                  }
                  mutate { remove_field =>[ "data" ,"supplementary_data", "data_classification", "last_state_modified_date", "type","last_modified", "created_date" ] }
                  mutate {
                          rename => { "[data_new]" => "data" }
                          rename => { "[supplementary_data_new]"  => "supplementary_data" }
                          rename => { "[data_classification_new]"  => "data_classification" }
                  }
                  mutate {
                    add_field => { "index_id" => "global_search" }
                  }
                  mutate {
                    lowercase => [ "index_id" ]
                  }
              } else {
                  mutate {
                      add_field => { "index_id" => "%{case_type_id}_cases" }
                }
              mutate {
                lowercase => [ "index_id" ]
              }
              }
        }
      03_output.conf: |
        output {
            elasticsearch {
                hosts => ["http://{{ .Release.Name }}-es-master:9200"]
                sniffing => false
                index => "%{[index_id]}"
                document_type => "_doc"
                document_id => "%{id}"
                timeout => 60
            }
        }
  ccd-case-document-am-api:
  enabled: true
  java:
    releaseNameOverride: ${SERVICE_NAME}-ccd-case-document-am-api
    imagePullPolicy: Always
    image: hmctspublic.azurecr.io/ccd/case-document-am-api:latest
    ingressHost: ccd-case-document-am-api-${SERVICE_FQDN}
    environment:
      CASE_DOCUMENT_S2S_AUTHORISED_SERVICES: ccd_case_document_am_api,ccd_gw,xui_webapp,ccd_data,bulk_scan_processor,em_npa_app,dg_docassembly_api,em_stitching_api,em_ccd_orchestrator,bulk_scan_orchestrator,sptribs_case_api,sptribs_frontend
      CCD_DATA_STORE_API_BASE_URL: http://{{ .Release.Name }}-ccd-data-store-api
      LOGGING_LEVEL_UK_GOV_HMCTS_REFORM_CCD: DEBUG
    autoscaling:
      enabled: false

am-org-role-mapping-service:
    enabled: true
    java:
      image: 'hmctspublic.azurecr.io/am/org-role-mapping-service:pr-1737'
      releaseNameOverride: ${SERVICE_NAME}-am-org-role-mapping-service
      ingressHost: am-org-role-mapping-service-${SERVICE_FQDN}
      imagePullPolicy: Always
      devmemoryRequests: 1024Mi
      devcpuRequests: 250m
      devmemoryLimits: 2048Mi
      devcpuLimits: 1500m
      environment:
        CASE_DATA_STORE_BASEURL: http://{{ .Release.Name }}-ccd-data-store-api
        CASE_DOCUMENT_AM_BASEURL: http://${SERVICE_NAME}-ccd-case-document-am-api
        DEFINITION_STORE_HOST: http://ccd-definition-store-api-{{ .Release.Name }}.preview.platform.hmcts.net
        BUNDLING_API_URL: https://em-ccdorc-${SERVICE_FQDN}
        CITIZEN_UPDATE_CASE_STATE_ENABLED: true
        ORG_ROLE_MAPPING_DB_HOST: xui-preview.postgres.database.azure.com
        ORG_ROLE_MAPPING_DB_NAME: "pr-${CHANGE_ID}-org_role_mapping"
        ORG_ROLE_MAPPING_DB_USERNAME: hmcts
        ORG_ROLE_MAPPING_DB_PORT: 5432
        ORG_ROLE_MAPPING_DB_OPTIONS: "?stringtype=unspecified&reWriteBatchedInserts=true&ssl=disable&gssEncMode=disable"
        TESTING_SUPPORT_ENABLED: true
        JUDICIAL_REF_APP_V2_ACTIVE: true
        JUDICIAL_REF_APP_V2_FILTER_AUTHS_BY_APP_ID: true
        ROLE_ASSIGNMENT_APP_URL: https://am-role-assignment-service-{{ .Release.Name }}.preview.platform.hmcts.net
        CASE_WORKER_REF_APP_URL: http://rd-caseworker-ref-api-aat.service.core-compute-aat.internal
        JUDICIAL_REF_APP_URL: http://rd-judicial-api-aat.service.core-compute-aat.internal
        PROFESSIONAL_REF_APP_URL: http://rd-professional-api-aat.service.core-compute-aat.internal
        AMQP_ENABLED: false
        PROFESSIONAL_SCHEDULING_ENABLED: false
        PROFESSIONAL_REFRESH_API_ENABLED: true
      secrets:
        ORG_ROLE_MAPPING_DB_PASSWORD:
          secretRef: postgres
          key: PASSWORD
          disabled: false

aac-manage-case-assignment:
  enabled: true
  java:
    imagePullPolicy: Always
    releaseNameOverride: ${SERVICE_NAME}-aac-manage-case-assignment
    image: hmctspublic.azurecr.io/aac/manage-case-assignment:pr-560
    ingressHost: aac-${SERVICE_FQDN}
    environment:
      MCA_DS_PROXY_URLS_ALLOWED_LIST: /searchCases.*,/internal/searchCases.*,/internal/cases.*
      MCA_DEF_STORE_PROXY_URLS_ALLOWED_LIST: /api/display/challenge-questions.*
      MANAGE_CASE_S2S_AUTHORISED_SERVICES: xui_webapp,ccd_data,fpl_case_service,sptribs_frontend,sptribs_ccd_submission,finrem_case_orchestration,xuimowebapp
      CCD_DATA_STORE_API_BASE_URL: http://{{ .Release.Name }}-ccd-data-store-api
      CCD_DEFINITION_STORE_API_BASE_URL: http://${SERVICE_NAME}-ccd-definition-store-api
      ROLE_ASSIGNMENT_URL: https://am-role-assignment-service-${SERVICE_FQDN}
      IDAM_CAA_USERNAME: ${IDAM_CAA_USERNAME}
      IDAM_CAA_PASSWORD: ${IDAM_CAA_PASSWORD}
      IDAM_CLIENT_SECRET: ${IDAM_MCA_CLIENT_SECRET}
    autoscaling:
      enabled: false
    keyVaults:
      aac:
        secrets:
        - name: aac-manage-case-s2s-secret
          alias: MANAGE_CASE_S2S_KEY
        - name: idam-mca-client-secret
          alias: IDAM_CLIENT_SECRET
        - name: idam-mca-system-user-username
          alias: IDAM_CAA_USERNAME
        - name: idam-mca-system-user-password
          alias: IDAM_CAA_PASSWORD
        - name: idam-noc-approver-username
          alias: IDAM_NOC_APPROVER_USERNAME
        - name: idam-noc-approver-password
          alias: IDAM_NOC_APPROVER_PASSWORD
        - name: notify-mca-api-key-secret
          alias: NOTIFY_MCA_API_KEY

xui-webapp:
  enabled: true
  nodejs:
    imagePullPolicy: Always
    releaseNameOverride: ${SERVICE_NAME}-xui-webapp
    image: hmctspublic.azurecr.io/xui/webapp:pr-4511
    ingressHost: webapp-${SERVICE_FQDN}
    devcpuRequests: 250m
    devmemoryRequests: 1024Mi
    devmemoryLimits: 1024Mi
    environment:
      DUMMY_VAR: 1
      SERVICES_CCD_COMPONENT_API: https://gateway-{{ .Release.Name }}.preview.platform.hmcts.net
      SERVICES_CCD_DATA_STORE_API: http://ccd-data-store-api-{{ .Release.Name }}.preview.platform.hmcts.net
      SERVICES_DOCUMENTS_API_V2: http://${SERVICE_NAME}-ccd-case-document-am-api
      SERVICES_CCD_CASE_ASSIGNMENT_API: http://aac-{{ .Release.Name }}.preview.platform.hmcts.net
      FEATURE_REDIS_ENABLED: false
      FEATURE_APP_INSIGHTS_ENABLED: true
      HEALTH_ROLE_ASSIGNMENT_API: https://am-role-assignment-service-{{ .Release.Name }}.preview.platform.hmcts.net
      SERVICES_ROLE_ASSIGNMENT_API: https://am-role-assignment-service-{{ .Release.Name }}.preview.platform.hmcts.net
      SERVICES_ROLE_ASSIGNMENT_MAPPING_API: https://am-org-role-mapping-service-{{ .Release.Name }}.preview.platform.hmcts.net
      JURISDICTIONS: DIVORCE,PROBATE,FR,PUBLICLAW,IA,SSCS,EMPLOYMENT,HRS,CIVIL,CMC,PRIVATELAW,BEFTA_JURISDICTION_3,BEFTA_JURISDICTION_2,BEFTA_JURISDICTION_1,BEFTA_MASTER


xui-mo-webapp:
  enabled: true
  nodejs:
    imagePullPolicy: Always
    releaseNameOverride: ${SERVICE_NAME}-xui-mo
    image: hmctspublic.azurecr.io/xui/mo-webapp:pr-1384
    ingressHost: ${SERVICE_FQDN}
    environment:
      MANAGE_CASE_LINK: https://xui-${SERVICE_FQDN}/cases
      MANAGE_ORG_LINK: https://xui-mo-${SERVICE_FQDN}
      SERVICES_CCD_DATA_STORE_API: https://ccd-data-store-api-{{ .Release.Name }}.preview.platform.hmcts.net
      SERVICES_CCD_COMPONENT_API: http://gateway-{{ .Release.Name }}.preview.platform.hmcts.net
      SERVICES_MCA_PROXY_API: https://aac-{{ .Release.Name }}.preview.platform.hmcts.net
      JURISDICTIONS: BEFTA_JURISDICTION_3,BEFTA_JURISDICTION_2,BEFTA_JURISDICTION_1,BEFTA_MASTER
      SERVICES_PRD_COMMONDATA_API: http://rd-commondata-api-aat.service.core-compute-aat.internal
      CASE_TYPES: FT_NewCaseSupplementry,FT_NoCCaseType,FT_UnassignedCase
      UNASSIGNED_CASE_TYPES: FT_NewCaseSupplementry,true,true|FT_NoCCaseType,true,false|FT_UnassignedCase,true,false
      SERVICES_CCD_DEFINITION_STORE_API: http://ccd-definition-store-api-{{ .Release.Name }}.preview.platform.hmcts.net
      SERVICES_ROLE_ASSIGNMENT_MAPPING_API: http://am-org-role-mapping-service-{{ .Release.Name }}.preview.platform.hmcts.net


postgresql:
  enabled: true
  flexibleserver: xui-preview
  setup:
    databases:
      - name: "pr-${CHANGE_ID}-xui-case-api"
      - name: "pr-${CHANGE_ID}-data-store"
      - name: "pr-${CHANGE_ID}-definition-store"
      - name: "pr-${CHANGE_ID}-user-profile"
      - name: "pr-${CHANGE_ID}-role_assignment"
      - name: "pr-${CHANGE_ID}-emstitch"
      - name: "pr-${CHANGE_ID}-org_role_mapping"

servicebus:
  enabled: false

wa:
  enabled: false